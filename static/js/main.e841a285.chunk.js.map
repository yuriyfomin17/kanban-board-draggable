{"version":3,"sources":["EditTitle.js","Task.js","Board.js","App.js","serviceWorker.js","index.js"],"names":["saveBut","width","height","viewBox","className","fill","xmlns","textAlign","fillRule","d","EditTitle","props","useState","el","title","inputValue","setInput","editBut","setEditBut","type","aria-label","aria-describedby","value","onChange","e","target","onClick","editTask","indexStatus","id","fill-rule","deleteBut","Task","deleteItem","deleteTask","key","uuidv4","draggableId","index","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","style","userSelect","borderRadius","padding","margin","minHeight","backgroundColor","isDragging","color","placeholder","addIcon","Board","addCardBut","setBut","setInputValue","sortMenuBar","setMenuBar","changeAddCard","addTask","display","flexDirection","alignItems","background","status","droppableId","String","droppableProps","isDraggingOver","tasks","map","sortDataAlphabetically","initialTasks","0","priority","time","Date","1","2","3","statuses","App","setTasks","column","ID","copiedTasks","slice","arrColumnTasks","indexToDelete","findIndex","splice","indexToEdit","push","length","console","log","typeSort","sort","a","b","justifyContent","onDragEnd","result","source","destination","tasksArr","removed","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e841a285.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport \"./App.css\"\n\nconst saveBut = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-file-check\" fill=\"currentColor\"\n                      xmlns=\"http://www.w3.org/2000/svg\" textAlign=\"right\">\n    <path fillRule=\"evenodd\"\n          d=\"M10.854 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7.5 8.793l2.646-2.647a.5.5 0 0 1 .708 0z\"/>\n    <path fillRule=\"evenodd\"\n          d=\"M4 1h8a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2zm0 1a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1H4z\"/>\n</svg>)\n\n\nfunction EditTitle(props) {\n    const [inputValue, setInput] = useState(props.el.title)\n    const [editBut, setEditBut] = useState(true)\n    const changeEdit = () => {\n        setEditBut(!editBut)\n    }\n    const changeSave = () => {\n        props.editTask(props.indexStatus, props.el.id, inputValue)\n        setEditBut(!editBut)\n    }\n\n    return (\n        <span>\n\n                {editBut ? <span className=\"dividerTitleBut\">{props.el.title}</span>  :\n                    <input type=\"text\" className=\"form-control\" aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\"\n                           value={inputValue} onChange={e => setInput(e.target.value)}/>}\n            {editBut ? <button type=\"button\" className=\"btn btn-outline-primary btn-sm \"\n                               onClick={changeEdit}>{props.editBut}</button> :\n                <button type=\"button\" className=\"btn btn-outline-primary btn-sm \"\n                        onClick={changeSave}>{saveBut}</button>}\n\n\n        </span>\n    );\n}\n\nexport default EditTitle;\n\n\n\n\n","import React, {useState} from 'react';\nimport styled from \"styled-components\";\nimport {Draggable} from \"react-beautiful-dnd\";\nimport {v4 as uuidv4} from 'uuid';\nimport EditTitle from \"./EditTitle\";\nimport \"./App.css\"\n\nconst editBut = (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-pen\" fill=\"currentColor\"\n         xmlns=\"http://www.w3.org/2000/svg\">\n        <path fill-rule=\"evenodd\"\n              d=\"M5.707 13.707a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391L10.086 2.5a2 2 0 0 1 2.828 0l.586.586a2 2 0 0 1 0 2.828l-7.793 7.793zM3 11l7.793-7.793a1 1 0 0 1 1.414 0l.586.586a1 1 0 0 1 0 1.414L5 13l-3 1 1-3z\"/>\n        <path fill-rule=\"evenodd\"\n              d=\"M9.854 2.56a.5.5 0 0 0-.708 0L5.854 5.855a.5.5 0 0 1-.708-.708L8.44 1.854a1.5 1.5 0 0 1 2.122 0l.293.292a.5.5 0 0 1-.707.708l-.293-.293z\"/>\n        <path d=\"M13.293 1.207a1 1 0 0 1 1.414 0l.03.03a1 1 0 0 1 .03 1.383L13.5 4 12 2.5l1.293-1.293z\"/>\n    </svg>\n\n)\nconst deleteBut =(\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-x-circle-fill\" fill=\"currentColor\"\n         xmlns=\"http://www.w3.org/2000/svg\">\n        <path fillRule=\"evenodd\"\n              d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-4.146-3.146a.5.5 0 0 0-.708-.708L8 7.293 4.854 4.146a.5.5 0 1 0-.708.708L7.293 8l-3.147 3.146a.5.5 0 0 0 .708.708L8 8.707l3.146 3.147a.5.5 0 0 0 .708-.708L8.707 8l3.147-3.146z\"/>\n    </svg>\n)\n\n\nfunction Task(props) {\n\n    const deleteItem = () => {\n        props.deleteTask(props.indexStatus, props.el.id)\n    }\n\n    return (\n        <div>\n\n            <Draggable key={uuidv4()} draggableId={props.el.id} index={props.index}>\n                {(provided, snapshot) => (\n                    <div  key={props.el.id}\n                         ref={provided.innerRef}\n                         {...provided.draggableProps}\n                         {...provided.dragHandleProps}\n                         style={{\n                             userSelect: \"none\",\n                             borderRadius: 10,\n                             padding: 16,\n                             margin: \"0 0 8px 0\",\n                             minHeight: \"5px\",\n                             backgroundColor: snapshot.isDragging\n                                 ? \"#d5e0d8\"\n                                 : \"#a7c9e3\",\n                             color: \"white\",\n                             ...provided.draggableProps.style\n                         }}\n                    >\n\n                        <EditTitle el={props.el} editTask={props.editTask} indexStatus={props.indexStatus} editBut={editBut}/>\n\n                        <div className=\"dividerBut\"/>\n                        <button type=\"button\" className=\"btn btn-outline-primary btn-sm \" onClick={deleteItem}>{deleteBut}</button>\n                        {provided.placeholder}\n                    </div>\n\n                )}\n\n\n            </Draggable>\n\n\n        </div>\n    );\n}\n\nexport default Task;\n\n\n\n\n\n","import React, {useState} from 'react';\nimport Task from \"./Task\";\nimport {Droppable} from \"react-beautiful-dnd\";\nimport {v4 as uuidv4} from 'uuid';\nimport './App.css';\nimport './AddCard.css'\n\nconst addIcon = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-plus-square\" fill=\"currentColor\"\n                      xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\" d=\"M8 3.5a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5H4a.5.5 0 0 1 0-1h3.5V4a.5.5 0 0 1 .5-.5z\"/>\n    <path fill-rule=\"evenodd\" d=\"M7.5 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1H8.5V12a.5.5 0 0 1-1 0V8z\"/>\n    <path fill-rule=\"evenodd\"\n          d=\"M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\"/>\n</svg>)\nconst saveBut = (<svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-file-check\" fill=\"currentColor\"\n                      xmlns=\"http://www.w3.org/2000/svg\" textAlign=\"right\">\n    <path fillRule=\"evenodd\"\n          d=\"M10.854 6.146a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0l-1.5-1.5a.5.5 0 1 1 .708-.708L7.5 8.793l2.646-2.647a.5.5 0 0 1 .708 0z\"/>\n    <path fillRule=\"evenodd\"\n          d=\"M4 1h8a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2zm0 1a1 1 0 0 0-1 1v10a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V3a1 1 0 0 0-1-1H4z\"/>\n</svg>)\n\nfunction Board(props) {\n    const [addCardBut, setBut] = useState(false)\n    const [inputValue, setInputValue] = useState('')\n    const [sortMenuBar, setMenuBar] = useState(false)\n    const toggleMenu = () => {\n        setMenuBar(!sortMenuBar)\n    }\n    const changeAddCard = () => {\n        if (addCardBut === false) {\n            setBut(!addCardBut)\n        }\n\n        if (addCardBut === true && inputValue !== '') {\n            setBut(!addCardBut)\n            props.addTask(props.indexStatus, inputValue)\n            setInputValue('')\n        }\n\n    }\n    const setInput = (e) => {\n        setInputValue(e.target.value)\n\n    }\n    const sortDataTimeOld = () => {\n        props.sortDataAlphabetically(props.indexStatus, \"TimeOLD\")\n    }\n    const sortDataTimeNew = () => {\n        props.sortDataAlphabetically(props.indexStatus, \"TimeNew\")\n    }\n    const sortAlphabet = () => {\n        props.sortDataAlphabetically(props.indexStatus, \"Alphabet\")\n    }\n\n    return (\n        <div style={{\n            display: 'flex', flexDirection: \"column\", alignItems: \"center\"\n        }}>\n\n            <div style={{margin: 8}}>\n                <h2\n                    style={{\n                        background: 'lightgrey',\n                        padding: 4,\n                        width: 250,\n                        minHeight: 1,\n                        borderRadius: 10,\n                        textAlign: \"center\"\n\n\n                    }}\n                >Board {props.status}</h2>\n\n\n                <Droppable key={uuidv4()} droppableId={String(props.indexStatus)}>\n                    {(provided, snapshot) => (\n\n                        <div className='cardsContainer'\n                             ref={provided.innerRef}\n                             {...provided.droppableProps}\n                             style={{\n                                 background: snapshot.isDraggingOver ? 'lightgrey' : 'lightblue',\n                                 padding: 4,\n                                 width: 250,\n                                 minHeight: 500,\n\n\n                             }}\n                        >\n\n\n                            {\n                                props.tasks.map((el, index) => <Task\n                                    key={el.id}\n                                    el={el}\n                                    index={index}\n                                    deleteTask={props.deleteTask}\n                                    editTask={props.editTask}\n                                    indexStatus={props.indexStatus}\n\n                                />)\n                            }\n\n                            {provided.placeholder}\n\n                        </div>\n                    )}\n\n\n                </Droppable>\n\n\n                {addCardBut ? <input type=\"text\" className=\"form-control\" aria-label=\"Small\"\n                                     aria-describedby=\"inputGroup-sizing-sm\" value={inputValue}\n                                     onChange={setInput}/> : ''}\n                {addCardBut ? <button type=\"button\" className=\"btn btn-outline-primary btn-sm \"\n                                      onClick={changeAddCard}>{saveBut}</button> :\n                    <span className=\"dropdown\">\n                        <button type=\"button\" className=\"btn btn-outline-primary btn-sm \"\n                                onClick={changeAddCard}>{addIcon}</button>\n                    </span>\n                }\n\n                    <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" onClick={toggleMenu}>Sort\n                        by..</button>\n                {sortMenuBar?<div><button type=\"button\" className=\"btn btn-outline-primary btn-sm\"\n                                  onClick={sortAlphabet}>Alphabet</button>\n                    <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" onClick={sortDataTimeNew}>first new</button>\n                    <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" onClick={sortDataTimeOld}>first old</button></div>:''}\n\n\n            </div>\n        </div>\n\n    );\n}\n\nexport default Board;\n\n\n\n\n","import React, {useState} from 'react';\nimport Board from \"./Board\";\nimport {v4 as uuidv4} from 'uuid';\nimport {DragDropContext} from \"react-beautiful-dnd\";\n\nconst initialTasks = [\n    {\n        0: [{\n            id: uuidv4(),\n            title: \"a\",\n            priority: 1,\n            status: 'review',\n            time: new Date()\n        },{\n            id: uuidv4(),\n            title: \"b\",\n            priority: 2,\n            status: 'review',\n            time: new Date()\n        },{\n            id: uuidv4(),\n            title: \"c\",\n            priority: 3,\n            status: 'review',\n            time: new Date()\n        },]\n    },\n    {\n        1: []\n    },\n    {\n        2: []\n    },\n    {\n        3: [\n            {\n                id: uuidv4(),\n                title: \"d\",\n                priority: 3,\n                status: 'review',\n                time: new Date()\n            },\n        ]\n    }\n\n]\n\nconst statuses = ['todo', 'progress', 'review', 'done']\n\nfunction App() {\n    const [tasks, setTasks] = useState(initialTasks)\n    const deleteTask = (column, ID) => {\n        const copiedTasks = tasks.slice()\n        const arrColumnTasks = copiedTasks[column][column]\n        const indexToDelete = arrColumnTasks.findIndex(el => el.id === ID)\n        arrColumnTasks.splice(indexToDelete, 1)\n        setTasks(copiedTasks)\n    }\n    const editTask = (column, ID, title) => {\n        const copiedTasks = tasks.slice()\n        const arrColumnTasks = copiedTasks[column][column]\n        const indexToEdit = arrColumnTasks.findIndex(el => el.id === ID)\n        arrColumnTasks[indexToEdit].title = title\n        setTasks(copiedTasks)\n    }\n    const addTask = (column, title) => {\n        const copiedTasks = tasks.slice()\n        const arrColumnTasks = copiedTasks[column][column]\n        arrColumnTasks.push({id: uuidv4(), title: title, priority: arrColumnTasks.length + 1, time: new Date()})\n        console.log(copiedTasks)\n    }\n    const sortDataAlphabetically = (column, typeSort) => {\n        const copiedTasks = tasks.slice()\n        const arrColumnTasks = copiedTasks[column][column]\n        if (typeSort === \"Alphabet\") {\n\n            arrColumnTasks.sort(function (a, b) {\n                if (a.title > b.title) {\n                    return 1\n                }\n                if (a.title < b.title) {\n                    return -1\n                }\n\n            })\n            setTasks(copiedTasks)\n        }\n        if (typeSort === \"TimeNew\") {\n            console.log(arrColumnTasks)\n            arrColumnTasks.sort(function (a, b) {\n                if (a.time > b.time) {\n                    return -1\n                }\n                if (a.time < b.time) {\n                    return 1\n                }\n\n            })\n            setTasks(copiedTasks)\n        }\n        if (typeSort === \"TimeOLD\") {\n            console.log(arrColumnTasks)\n            arrColumnTasks.sort(function (a, b) {\n                if (a.time > b.time) {\n                    return 1\n                }\n                if (a.time < b.time) {\n                    return -1\n                }\n\n            })\n            setTasks(copiedTasks)\n        }\n\n\n    }\n    const onDragEnd = (result) => {\n        const {source, destination} = result;\n        // dropped outside the list\n        if (!destination) {\n            return;\n        }\n        if (destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ) {\n            return;\n        }\n        if (destination.droppableId === source.droppableId) {\n            const copiedTasks = tasks.slice()\n            const tasksArr = copiedTasks[destination.droppableId][destination.droppableId]\n            const [removed] = tasksArr.splice(result.source.index, 1)\n            tasksArr.splice(result.destination.index, 0, removed)\n            console.log(copiedTasks)\n            setTasks(copiedTasks)\n        } else {\n            console.log(source.droppableId)\n            console.log(destination.droppableId)\n            const copiedTasks = tasks.slice()\n            const tasksArr = copiedTasks[source.droppableId][source.droppableId]\n            const [removed] = tasksArr.splice(result.source.index, 1)\n            console.log(removed)\n            console.log(copiedTasks)\n            console.log(copiedTasks[destination.droppableId][destination.droppableId])\n            copiedTasks[destination.droppableId][destination.droppableId].splice(result.destination.index, 0, removed)\n            console.log(copiedTasks)\n            setTasks(copiedTasks)\n\n        }\n\n\n    }\n    return (\n        <div style={{display: 'flex', justifyContent: 'center', height: '100%'}}>\n            <DragDropContext onDragEnd={onDragEnd}>\n                <div\n                    style={{\n                        display: 'flex', flexDirection: \"row\", alignItems: \"top\"\n                    }}\n\n                >\n                    {\n                        tasks.map((el, index) => <Board\n                            indexStatus={index}\n                            key={index}\n                            status={statuses[index]}\n                            tasks={el[String(index)]}\n                            deleteTask={deleteTask}\n                            editTask={editTask}\n                            addTask={addTask}\n                            sortDataAlphabetically={sortDataAlphabetically}\n                        />)\n                    }\n                </div>\n\n\n            </DragDropContext>\n        </div>\n\n    );\n}\n\nexport default App;\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}